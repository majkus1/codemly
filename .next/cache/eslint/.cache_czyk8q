[{"C:\\Users\\Asus\\Desktop\\mocne-strony\\ms-app\\pages\\index.tsx":"1","C:\\Users\\Asus\\Desktop\\mocne-strony\\ms-app\\pages\\_app.tsx":"2","C:\\Users\\Asus\\Desktop\\mocne-strony\\ms-app\\components\\nav.tsx":"3"},{"size":1906,"mtime":1699655242643,"results":"4","hashOfConfig":"5"},{"size":413,"mtime":1699652302036,"results":"6","hashOfConfig":"5"},{"size":4915,"mtime":1699637731725,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"niridx",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\Asus\\Desktop\\mocne-strony\\ms-app\\pages\\index.tsx",["19","20"],[],"import Nav from '@/components/nav'\r\nimport { GetStaticProps, GetStaticPropsContext } from 'next'\r\nimport { serverSideTranslations } from 'next-i18next/serverSideTranslations'\r\nimport { useRouter } from 'next/router'\r\nimport Head from 'next/head'\r\n\r\nconst Home = () => {\r\n\tconst router = useRouter()\r\n\tconst { locale } = router\r\n\r\n\tconst title = locale === 'pl' ? 'Tytuł po polsku' : 'Title in English'\r\n\tconst description = locale === 'pl' ? 'Opis po polsku' : 'Description in English'\r\n\r\n\tconst handleLocaleChange = (locale: string) => {\r\n\t\trouter.push(router.pathname, router.asPath, { locale })\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>{title}</title>\r\n\t\t\t\t<meta name='description' content={description} />\r\n\t\t\t\t<link rel='alternate' hrefLang='en' href='https://www.twojadomena.com/en' />\r\n\t\t\t\t<link rel='alternate' hrefLang='pl' href='https://www.twojadomena.com/pl' />\r\n\t\t\t\t<link rel='alternate' hrefLang='x-default' href='https://www.twojadomena.com/' />\r\n\t\t\t</Head>\r\n\t\t\t<div className='wrapper'>\r\n\t\t\t\t<Nav />\r\n\t\t\t\t<header className='header-ms'>\r\n\t\t\t\t\t<video className='video-background' autoPlay loop muted playsInline>\r\n\t\t\t\t\t\t<source src='/img/video-bgc-mobile-re-2.mp4' type='video/mp4' />\r\n\t\t\t\t\t</video>\r\n\t\t\t\t\t<div className='welcome'>\r\n\t\t\t\t\t\t<img src='/img/cbgcno.png' className='white-ms-logo' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='line'></div>\r\n\t\t\t\t</header>\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<div className='btn-lang'>\r\n\t\t\t\t\t\t<button onClick={() => handleLocaleChange('en')}>English</button>\r\n\t\t\t\t\t\t<button onClick={() => handleLocaleChange('pl')}>Polski</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n\r\n// Reszta kodu komponentu strony...\r\n\r\nexport const getStaticProps: GetStaticProps = async (context: GetStaticPropsContext) => {\r\n\tconst { locale } = context\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\t...(await serverSideTranslations(locale!, ['common'])),\r\n\t\t},\r\n\t}\r\n}\r\n","C:\\Users\\Asus\\Desktop\\mocne-strony\\ms-app\\pages\\_app.tsx",[],[],"C:\\Users\\Asus\\Desktop\\mocne-strony\\ms-app\\components\\nav.tsx",["21","22","23","24","25","26","27","28","29","30","31","32","33","34"],[],"import React, { useState, useEffect, useRef, MouseEvent } from 'react'\r\nimport { gsap } from 'gsap'\r\nimport { useTranslation } from 'next-i18next';\r\nimport { GetStaticProps, GetStaticPropsContext } from 'next';\r\nimport { serverSideTranslations } from 'next-i18next/serverSideTranslations';\r\n\r\nconst Navbar: React.FC = () => {\r\n\tconst [isLinksVisible, setLinksVisible] = useState<boolean>(false)\r\n\tconst linksRef = useRef<HTMLDivElement>(null)\r\n\tconst [logoSrc, setLogoSrc] = useState('/img/c6b.png')\r\n\tconst [hasScrolled, setHasScrolled] = useState(false)\r\n\tconst { t } = useTranslation('common');\r\n\r\n\tconst handleScroll = () => {\r\n\t\tconst offset = window.scrollY\r\n\t\tif (offset > 370 && !hasScrolled) {\r\n\t\t\tsetLogoSrc('/img/c2.png') // Ścieżka do nowego obrazu\r\n\t\t\tsetHasScrolled(true) // Ustaw flagę, że scroll już się wydarzył\r\n\t\t} else if (offset <= 370 && hasScrolled) {\r\n\t\t\tsetLogoSrc('/img/c6b.png') // Powrót do oryginalnego obrazu\r\n\t\t\tsetHasScrolled(false) // Reset flagi, gdy wrócimy na górę\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('scroll', handleScroll)\r\n\t\treturn () => window.removeEventListener('scroll', handleScroll)\r\n\t}, [hasScrolled])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (linksRef.current) {\r\n\t\t\tgsap.set(linksRef.current, { autoAlpha: 0, y: -100 });\r\n\t\t\tgsap.set(linksRef.current.children, { opacity: 0, y: 20 }); // Inicjalizacja stanu linków\r\n\t\t}\r\n\t}, []);\r\n\t\r\n\tconst toggleLinks = () => {\r\n\t\tconst newIsLinksVisible = !isLinksVisible;\r\n\t\tsetLinksVisible(newIsLinksVisible);\r\n\t\r\n\t\tif (linksRef.current) {\r\n\t\t\tconst links = Array.from(linksRef.current.children);\r\n\t\t\tconst tl = gsap.timeline();\r\n\t\r\n\t\t\tif (newIsLinksVisible) {\r\n\t\t\t\ttl.to(linksRef.current, {\r\n\t\t\t\t\tduration: 1.5,\r\n\t\t\t\t\tease: 'power1.out',\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\tautoAlpha: 1,\r\n\t\t\t\t}).to(links, {\r\n\t\t\t\t\tduration: 0.5,\r\n\t\t\t\t\tease: 'power1.out',\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tstagger: 0.2,\r\n\t\t\t\t}, \"-=0.5\"); // Rozpoczęcie animacji linków przed zakończeniem animacji kontenera\r\n\t\t\t} else {\r\n\t\t\t\ttl.to(links, {\r\n\t\t\t\t\tduration: 0.1,\r\n\t\t\t\t\tease: 'power1.in',\r\n\t\t\t\t\ty: 20,\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\tstagger: 0.1\r\n\t\t\t\t}).to(linksRef.current, {\r\n\t\t\t\t\tduration: 0.1,\r\n\t\t\t\t\tease: 'power1.in',\r\n\t\t\t\t\ty: -100,\r\n\t\t\t\t\tautoAlpha: 0,\r\n\t\t\t\t}, \"+=0.2\"); // Opóźnienie zamykania kontenera\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tif (linksRef.current) {\r\n\t\t\tif (isLinksVisible) {\r\n\t\t\t\tlinksRef.current.style.display = 'flex'\r\n\t\t\t\tlinksRef.current.style.animation = 'slideInUp 0.5s forwards'\r\n\t\t\t} else {\r\n\t\t\t\tlinksRef.current.style.animation = 'slideOutDown 0.5s forwards'\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (linksRef.current) {\r\n\t\t\t\t\t\tlinksRef.current.style.display = 'none'\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 500) // czas trwania animacji w ms\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isLinksVisible])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='uplogo'>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={logoSrc}\r\n\t\t\t\t\talt='logo'\r\n\t\t\t\t\tclassName={hasScrolled ? 'logo-hidden' : ''}\r\n\t\t\t\t\tonLoad={() => setHasScrolled(false)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{/* <div className='mediamob'>\r\n\t\t\t\t<div className='social'>\r\n\t\t\t\t\t<img src='/img/facebook-f.svg' />\r\n\t\t\t\t\t<img src='/img/instagram.svg' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='social'>\r\n\t\t\t\t\t<img src='/img/phone-volume-solid.svg' />\r\n\t\t\t\t\t<img src='/img/envelope-solid.svg' />\r\n\t\t\t\t</div>\r\n\t\t\t</div> */}\r\n\t\t\t<div className='navbar' id='myNavbar'>\r\n\t\t\t\t<div className='menu'>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<input type='checkbox' id='check' onClick={toggleLinks} />\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div className='socialecontact'>\r\n\t\t\t\t\t\t<a href=''>\r\n\t\t\t\t\t\t\t<img src='/img/phone-volume-solid.svg' alt='' />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href=''>\r\n\t\t\t\t\t\t\t<img src='/img/envelope-solid.svg' alt='' />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href=''>\r\n\t\t\t\t\t\t\t<img src='/img/facebook-f.svg' alt='' />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href=''>\r\n\t\t\t\t\t\t\t<img src='/img/instagram.svg' alt='' />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='links' ref={linksRef}>\r\n\t\t\t\t\t{/* ... links ... */}\r\n\t\t\t\t\t<a href='#news'>{'< OFERTA />'}</a>\r\n\t\t\t\t\t<a href='#news'>{'< REALIZACJE />'}</a>\r\n\t\t\t\t\t<a href='#news'>{'< KONTAKT />'}</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='desktop-nav'>\r\n\t\t\t\t<div className='desktop-nav-logo'>\r\n\t\t\t\t\t<img src='/img/c6b.png' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='desktop-nav-links'>\r\n\t\t\t\t\t<a href='#news'>{t('welcome')}</a>\r\n\t\t\t\t\t<a href='#news'>{'< REALIZACJE />'}</a>\r\n\t\t\t\t\t<a href='#news'>{'< KONTAKT />'}</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='mailtel'>\r\n\t\t\t\t\t<div className='tel'>\r\n\t\t\t\t\t\t<img src='/img/phone-volume-solid.svg' alt='' />\r\n\t\t\t\t\t\t<a href=''>+48 516 598 792</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mailmess'>\r\n\t\t\t\t\t\t<img src='/img/envelope-solid.svg' alt='' />\r\n\t\t\t\t\t\t<a href=''>office@codemly.com</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='media'>\r\n\t\t\t\t\t<img src='/img/facebook-f.svg' />\r\n\t\t\t\t\t<img src='/img/instagram.svg' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Navbar",{"ruleId":"35","severity":1,"message":"36","line":33,"column":7,"nodeType":"37","endLine":33,"endColumn":62},{"ruleId":"38","severity":1,"message":"39","line":33,"column":7,"nodeType":"37","endLine":33,"endColumn":62},{"ruleId":"40","severity":1,"message":"41","line":28,"column":5,"nodeType":"42","endLine":28,"endColumn":18,"suggestions":"43"},{"ruleId":"35","severity":1,"message":"36","line":98,"column":5,"nodeType":"37","endLine":103,"endColumn":7},{"ruleId":"35","severity":1,"message":"36","line":125,"column":8,"nodeType":"37","endLine":125,"endColumn":56},{"ruleId":"35","severity":1,"message":"36","line":128,"column":8,"nodeType":"37","endLine":128,"endColumn":52},{"ruleId":"35","severity":1,"message":"36","line":131,"column":8,"nodeType":"37","endLine":131,"endColumn":48},{"ruleId":"35","severity":1,"message":"36","line":134,"column":8,"nodeType":"37","endLine":134,"endColumn":47},{"ruleId":"35","severity":1,"message":"36","line":148,"column":6,"nodeType":"37","endLine":148,"endColumn":32},{"ruleId":"38","severity":1,"message":"39","line":148,"column":6,"nodeType":"37","endLine":148,"endColumn":32},{"ruleId":"35","severity":1,"message":"36","line":157,"column":7,"nodeType":"37","endLine":157,"endColumn":55},{"ruleId":"35","severity":1,"message":"36","line":161,"column":7,"nodeType":"37","endLine":161,"endColumn":51},{"ruleId":"35","severity":1,"message":"36","line":166,"column":6,"nodeType":"37","endLine":166,"endColumn":39},{"ruleId":"38","severity":1,"message":"39","line":166,"column":6,"nodeType":"37","endLine":166,"endColumn":39},{"ruleId":"35","severity":1,"message":"36","line":167,"column":6,"nodeType":"37","endLine":167,"endColumn":38},{"ruleId":"38","severity":1,"message":"39","line":167,"column":6,"nodeType":"37","endLine":167,"endColumn":38},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [handleScroll, hasScrolled]",{"range":"47","text":"48"},[1155,1168],"[handleScroll, hasScrolled]"]